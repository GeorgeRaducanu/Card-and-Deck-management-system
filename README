**Name: Raducanu George-Cristian**
**Group: 311CA**

## Title + topic number
Now you see me - Tema1 SDA
### Description:

* Brief description of theme functionality:
The theme includes all the required functions:
* Those for adding, deleting, mixing, returning a list, sorting, interclassing, displaying, etc.
* I think that the code is clear enough, but I will explain the existence of the get_count function.
This is like an update function that makes sure everything is updated and set correctly.
It's not necessarily an elegant solution, but it's an engineering solution because I had an error in the code that I couldn't identify at one point and I tried that and some of the segmentation faults disappeared.
* Otherwise, I consider that all the functions are clear in terms of implementation and existence (why they are made).

### Comments on the theme:

* My code uses non-generic structures, I think a more successful theme would have used void*.
* Completing this topic taught me to take care of all possible cases when performing operations with lists
* For example, deleting a book from the first package when it contained only one book generates a segmentation fault and it took me about a whole day to debug this aspect because many tests failed.
* Also with sort_deck I had a small problem because it entered the infinite loop and did nothing.
* At shuffle I proposed an original method, I practically "break" the necessary pointers and place them accordingly, this solution worked from the first and did not use any other add or remove functions
* With the go function, after the effective combination, I had to delete the combined packages and that's why I used a modified delete function, because I didn't need the corresponding message.
* The topic was very difficult because the tests seemed hard to me (containing all possible situations) but it was justified as a difficulty.

### (Optional) Resources / Bibliography:

1. (https://www.geeksforgeeks.org/c-program-bubble-sort-linked-list/)
2. (https://www.geeksforgeeks.org/doubly-linked-list/)
3. (https://www.geeksforgeeks.org/delete-a-node-in-a-doubly-linked-list/)
